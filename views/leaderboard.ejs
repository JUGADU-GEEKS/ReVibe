<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Eco Leaders - Carbon Footprint Reduction</title>
  <link rel="stylesheet" href="/stylesheets/userHome.css">
  <style>
    :root {
      --dark-bg: #0f0f13;
      --dark-card: #1a1a22;
      --accent-green: #4caf50;
      --accent-teal: #009688;
      --text-primary: #ffffff;
      --text-secondary: #b0b0b0;
      --input-bg: #252530;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      background-color: var(--dark-bg);
      color: var(--text-primary);
      font-family: 'Segoe UI', system-ui, sans-serif;
      min-height: 100vh;
      overflow-x: hidden;
      perspective: 1000px;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1rem;
    }
    
    /* Leaderboard Section */
    .leaderboard-section {
      padding: 8rem 0;
      position: relative;
      overflow: hidden;
    }
    
    .section-title {
      text-align: center;
      font-size: 2.5rem;
      margin-bottom: 3rem;
      background: linear-gradient(to right, var(--accent-green), var(--accent-teal));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    
    .leaderboard-subtitle {
      text-align: center;
      font-size: 1.2rem;
      color: var(--text-secondary);
      max-width: 600px;
      margin: 0 auto 4rem;
    }
    
    .leaderboard-container {
      position: relative;
      z-index: 2;
      max-width: 900px;
      margin: 0 auto;
    }
    
    .leaderboard-tabs {
      display: flex;
      justify-content: center;
      margin-bottom: 2rem;
    }
    
    .tab-btn {
      padding: 0.8rem 1.5rem;
      background: transparent;
      border: none;
      color: var(--text-secondary);
      font-weight: bold;
      cursor: pointer;
      border-bottom: 2px solid transparent;
      transition: all 0.3s;
      margin: 0 1rem;
    }
    
    .tab-btn.active {
      color: var(--accent-green);
      border-bottom: 2px solid var(--accent-green);
    }
    
    .leaderboard-cards {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }
    
    .leaderboard-card {
      background: var(--dark-card);
      border-radius: 10px;
      padding: 1.5rem;
      display: grid;
      grid-template-columns: 0.5fr 2fr 1fr 1fr;
      align-items: center;
      gap: 1rem;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      transition: transform 0.3s, box-shadow 0.3s;
    }
    
    .leaderboard-card:hover {
      transform: translateY(-5px) scale(1.02);
      box-shadow: 0 10px 25px rgba(76, 175, 80, 0.2);
    }
    
    .ranking {
      font-size: 2rem;
      font-weight: bold;
      color: var(--accent-green);
      display: flex;
      justify-content: center;
      align-items: center;
    }
    
    .top-ranking {
      background: linear-gradient(to right, var(--accent-green), var(--accent-teal));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      font-size: 2.5rem;
    }
    
    .user-info {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    
    .user-avatar {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background: linear-gradient(to right, var(--accent-green), var(--accent-teal));
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 1.5rem;
      color: white;
      border: 3px solid var(--dark-bg);
      overflow: hidden;
    }
    
    .user-avatar img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .user-name {
      font-weight: bold;
      font-size: 1.2rem;
      margin-bottom: 0.2rem;
    }
    
    .user-location {
      font-size: 0.9rem;
      color: var(--text-secondary);
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }
    
    .carbon-saved {
      font-weight: bold;
      font-size: 1.2rem;
      color: var(--accent-green);
      text-align: center;
    }
    
    .carbon-label {
      font-size: 0.8rem;
      color: var(--text-secondary);
      margin-top: 0.2rem;
    }
    
    .points {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    
    .points-value {
      font-weight: bold;
      font-size: 1.2rem;
    }
    
    .progress-bar {
      width: 100%;
      height: 8px;
      background-color: rgba(76, 175, 80, 0.2);
      border-radius: 4px;
      margin-top: 0.5rem;
      overflow: hidden;
    }
    
    .progress-fill {
      height: 100%;
      background: linear-gradient(to right, var(--accent-green), var(--accent-teal));
      border-radius: 4px;
    }
    
    /* Flying elements */
    .flying-elements {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
    }
    
    .flying-leaf {
      position: absolute;
      opacity: 0.15;
      filter: blur(1px);
    }
    
    .badge-container {
      display: flex;
      justify-content: space-between;
      margin-top: 3rem;
    }
    
    .badge-item {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      max-width: 150px;
    }
    
    .badge-icon {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      background: var(--dark-card);
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 1rem;
      border: 2px solid var(--accent-green);
      box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
    }
    
    .badge-title {
      font-weight: bold;
      margin-bottom: 0.5rem;
      color: var(--accent-green);
    }
    
    .badge-description {
      font-size: 0.9rem;
      color: var(--text-secondary);
    }
    
    /* Responsive */
    @media (max-width: 768px) {
      .leaderboard-card {
        grid-template-columns: 0.5fr 2fr;
        grid-template-rows: auto auto;
      }
      
      .carbon-saved, .points {
        grid-column: span 1;
        margin-top: 1rem;
      }
      
      .badge-container {
        flex-direction: column;
        align-items: center;
        gap: 2rem;
      }
    }
    
    @media (max-width: 576px) {
      .leaderboard-card {
        grid-template-columns: 1fr;
        text-align: center;
      }
      
      .user-info {
        flex-direction: column;
        justify-content: center;
      }
      
      .ranking {
        margin-bottom: 1rem;
      }
      
      .carbon-saved, .points {
        grid-column: 1;
        margin-top: 1rem;
      }
    }
  </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="container">
            <div class="logo">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                    stroke-linecap="round" stroke-linejoin="round" class="leaf-icon">
                    <path d="M11 20A7 7 0 0 1 4 13A7 7 0 0 1 4 6A7 7 0 0 1 11 4A7 7 0 0 1 11 20Z"></path>
                    <path d="M18 6C18 7 17 8 16 8S14 7 14 6 15 4 16 4 18 5 18 6Z"></path>
                    <path d="M18 14C18 15 17 16 16 16S14 15 14 14 15 12 16 12 18 13 18 14Z"></path>
                    <path d="M6 18C6 19 5 20 4 20S2 19 2 18 3 16 4 16 6 17 6 18Z"></path>
                </svg>
                <span>ReVibe</span>
            </div>
            <ul class="nav-links">
                <li><a href="/home" class="active">Home</a></li>
                <li><a href="/leaderboard">Leaderboard</a></li>
                <li><a href="/analytics">Analytics</a></li>
                <li><a href="#">About Us</a></li>
            </ul>
            <div class="nav-icons">
                <button class="icon-btn"><i class="search-icon">üîç</i></button>
                <button class="icon-btn"><i class="user-icon">üë§</i></button>
                <button class="icon-btn cart-btn">
                    <i class="cart-icon">üõí</i>
                    <span class="cart-count"><%= count %></span>
                </button>
            </div>
        </div>
    </nav>

  <section class="leaderboard-section">
    <div class="container">
      <h2 class="section-title">Carbon Footprint Leaders</h2>
      <p class="leaderboard-subtitle">Meet our top eco-warriors who have saved the most carbon through their sustainable purchases and activities.</p>
      
      <div class="leaderboard-container">
        <div class="leaderboard-tabs">
          <button class="tab-btn active">All Time</button>
        </div>
        
        <div class="leaderboard-cards">
            <% users.forEach((user, index) => { %>
              <div class="leaderboard-card" id="leader-<%= index + 1 %>">
                <div class="ranking <%= index === 0 ? 'top-ranking' : '' %>"><%= index + 1 %></div>
                <div class="user-info">
                    <% const avatarNum = Math.floor(Math.random() * 3) + 1; %>
                  <div class="user-avatar">
                    <img src="/ppimages/<%= avatarNum %>.jpg" alt="User Avatar">
                  </div>
                  <div>
                    <div class="user-name"><%= user.fullname %></div>
                    <div class="user-location">
                      <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z"></path>
                        <circle cx="12" cy="10" r="3"></circle>
                      </svg>
                      <%= user.email %>
                    </div>
                  </div>
                </div>
                <div class="carbon-saved">
                  <%= user.totalCarbonFootprint %> kg
                  <div class="carbon-label">Carbon Saved</div>
                </div>
                <div class="points">
                    <% let level = 1; %>
                    <% if (user.carbonSaved >= 400) { %>
                      <% level = 8; %>
                    <% } else if (user.carbonSaved >= 350) { %>
                      <% level = 7; %>
                    <% } else if (user.carbonSaved >= 300) { %>
                      <% level = 6; %>
                    <% } else if (user.carbonSaved >= 250) { %>
                      <% level = 5; %>
                    <% } else if (user.carbonSaved >= 200) { %>
                      <% level = 4; %>
                    <% } else if (user.carbonSaved >= 150) { %>
                      <% level = 3; %>
                    <% } else if (user.carbonSaved >= 100) { %>
                      <% level = 2; %>
                    <% } %>
                    
                    <div class="points-value">Level <%= level %></div>
                </div>
              </div>
            <% }); %>
          </div>
          
          
          
        <div class="badge-container">
          <div class="badge-item">
            <div class="badge-icon">
              <svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="var(--accent-green)" stroke-width="2">
                <path d="M12 15V3m0 12l-4-4m4 4l4-4M2 17l.621 2.485A2 2 0 0 0 4.561 21h14.878a2 2 0 0 0 1.94-1.515L22 17"></path>
              </svg>
            </div>
            <h4 class="badge-title">Carbon Saver</h4>
            <p class="badge-description">Reduced over 100kg of carbon emissions</p>
          </div>
          
          <div class="badge-item">
            <div class="badge-icon">
              <svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="var(--accent-green)" stroke-width="2">
                <path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
              </svg>
            </div>
            <h4 class="badge-title">Eco Evangelist</h4>
            <p class="badge-description">Referred 5+ friends to our platform</p>
          </div>
          
          <div class="badge-item">
            <div class="badge-icon">
              <svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="var(--accent-green)" stroke-width="2">
                <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
              </svg>
            </div>
            <h4 class="badge-title">Top Performer</h4>
            <p class="badge-description">Ranked in top 10 for 3+ weeks</p>
          </div>
        </div>
      </div>
    </div>
    
    <div class="flying-elements">
      <!-- Flying elements will be added by JS -->
    </div>
  </section>
  
  <!-- GSAP and ScrollTrigger -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
  
  <script>
    // Register ScrollTrigger plugin
    gsap.registerPlugin(ScrollTrigger);
    
    // Create flying leaf elements
    function createFlyingElements() {
      const flyingContainer = document.querySelector('.flying-elements');
      const leafShapes = [
        `<svg width="40" height="40" viewBox="0 0 24 24" fill="var(--accent-green)" opacity="0.2"><path d="M12 22c4.97 0 9-4.03 9-9-4.97 0-9 4.03-9 9zM5.6 10.25c0 1.38 1.12 2.5 2.5 2.5.53 0 1.01-.16 1.42-.44l-.02.19c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5l-.02-.19c.4.28.89.44 1.42.44 1.38 0 2.5-1.12 2.5-2.5 0-.93-.5-1.73-1.25-2.16.75-.43 1.25-1.23 1.25-2.16 0-1.38-1.12-2.5-2.5-2.5-.53 0-1.01.16-1.42.44l.02-.19C14.5 2.31 13.38 1.19 12 1.19s-2.5 1.12-2.5 2.5l.02.19c-.4-.28-.89-.44-1.42-.44-1.38 0-2.5 1.12-2.5 2.5 0 .93.5 1.73 1.25 2.16-.75.43-1.25 1.23-1.25 2.16z"></path></svg>`,
        `<svg width="35" height="35" viewBox="0 0 24 24" fill="var(--accent-teal)" opacity="0.2"><path d="M17 8C8 10 5.9 16.17 3.82 21.34l1.89.66l.95-2.3c.48.17.98.3 1.34.3C19 20 22 3 22 3c-1 2-8 2.25-13 3.25S2 11.5 2 13.5s1.75 3.75 1.75 3.75C7 8 17 8 17 8z"></path></svg>`,
        `<svg width="30" height="30" viewBox="0 0 24 24" fill="var(--accent-green)" opacity="0.2"><path d="M12 2.5a5.5 5.5 0 00-3.096 10.047 9.005 9.005 0 00-5.9 8.181.75.75 0 001.5.041 7.5 7.5 0 0114.993 0 .75.75 0 101.499-.041 9.005 9.005 0 00-5.9-8.181A5.5 5.5 0 0012 2.5zM8 8a4 4 0 118 0 4 4 0 01-8 0z"></path></svg>`
      ];
      
      // Create 30 flying leaves with random positions and animations
      for (let i = 0; i < 30; i++) {
        const leaf = document.createElement('div');
        leaf.className = 'flying-leaf';
        leaf.innerHTML = leafShapes[Math.floor(Math.random() * leafShapes.length)];
        
        // Random positioning
        leaf.style.left = `${Math.random() * 100}%`;
        leaf.style.top = `${Math.random() * 100}%`;
        
        flyingContainer.appendChild(leaf);
        
        // Animate each leaf with GSAP
        gsap.to(leaf, {
          x: `random(-100, 100, 10)`,
          y: `random(-100, 100, 10)`,
          rotation: `random(-180, 180, 10)`,
          duration: `random(20, 40)`,
          repeat: -1,
          yoyo: true,
          ease: "sine.inOut"
        });
      }
    }
    
    // Initialize animations when content is loaded
    document.addEventListener('DOMContentLoaded', () => {
      // Create flying elements
      createFlyingElements();
      
      // Animate section title when scrolled into view
      gsap.from(".section-title", {
        opacity: 0,
        y: 30,
        duration: 1,
        scrollTrigger: {
          trigger: ".leaderboard-section",
          start: "top 80%",
        }
      });
      
      // Animate subtitle
      gsap.from(".leaderboard-subtitle", {
        opacity: 0,
        y: 30,
        duration: 1,
        delay: 0.2,
        scrollTrigger: {
          trigger: ".leaderboard-section",
          start: "top 80%",
        }
      });
      
      // Animate the leaderboard cards
      gsap.from(".leaderboard-card", {
        opacity: 0,
        y: 30,
        duration: 0.6,
        stagger: 0.15,
        ease: "power2.out",
        scrollTrigger: {
          trigger: ".leaderboard-cards",
          start: "top 85%",
        }
      });
      
      // Animate badge items
      gsap.from(".badge-item", {
        opacity: 0,
        y: 30,
        duration: 0.6,
        stagger: 0.2,
        ease: "power2.out",
        scrollTrigger: {
          trigger: ".badge-container",
          start: "top 85%",
        }
      });
      
      // Tab switching functionality
      const tabButtons = document.querySelectorAll('.tab-btn');
      
      tabButtons.forEach(tab => {
        tab.addEventListener('click', () => {
          // Remove active class from all tabs
          tabButtons.forEach(t => t.classList.remove('active'));
          
          // Add active class to clicked tab
          tab.classList.add('active');
          
          // Animation for tab switching
          const cards = document.querySelectorAll('.leaderboard-card');
          
          // First hide all cards
          gsap.to(cards, {
            opacity: 0,
            y: 20,
            duration: 0.3,
            onComplete: () => {
              // Then show them again with stagger
              gsap.to(cards, {
                opacity: 1,
                y: 0,
                duration: 0.6,
                stagger: 0.1,
                ease: "power2.out"
              });
            }
          });
        });
      });
      
      // Animate progress bars
      const progressBars = document.querySelectorAll('.progress-fill');
      progressBars.forEach(bar => {
        const width = bar.style.width;
        bar.style.width = "0%";
        
        gsap.to(bar, {
          width: width,
          duration: 1.5,
          ease: "power2.out",
          scrollTrigger: {
            trigger: bar,
            start: "top 90%",
          }
        });
      });
    });
  </script>
</body>
</html>